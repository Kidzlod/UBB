-- FULL: DHL - UBB (UI + AllChar + Hitbox + ESP + Delete + Console)
-- Rainbow border/title, tabs Main/Setting

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local LP = Players.LocalPlayer
local PlayerGui = LP:WaitForChild("PlayerGui")

-- Safe remotes lookup
local UIRemotes = ReplicatedStorage:FindFirstChild("UIRemotes")
local AstroPurchase = UIRemotes and UIRemotes:FindFirstChild("AstroPurchase")
local CraftRemote = UIRemotes and UIRemotes:FindFirstChild("Craft")

-- States / defaults
_G.HeadSize = tonumber(_G.HeadSize) or 100
_G.HitboxEnabled = _G.HitboxEnabled or false
_G.ESP_Enabled = _G.ESP_Enabled or false
_G.ESP_Color = _G.ESP_Color or Color3.fromRGB(0,255,0)

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "DHL_UBB_UI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

-- Floating ON/OFF button
local toggleBtn = Instance.new("TextButton", ScreenGui)
toggleBtn.Size = UDim2.new(0, 66, 0, 36)
toggleBtn.Position = UDim2.new(0.03,0,0.42,0)
toggleBtn.Text = "MENU"
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 15
toggleBtn.BackgroundColor3 = Color3.fromRGB(25,25,25)
toggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
Instance.new("UICorner", toggleBtn).CornerRadius = UDim.new(0,10)
toggleBtn.AutoButtonColor = true
toggleBtn.Active = true
toggleBtn.Draggable = true

-- Main window
local main = Instance.new("Frame", ScreenGui)
main.Name = "MainWindow"
main.Size = UDim2.new(0, 340, 0, 420)
main.Position = UDim2.new(0.18, 0, 0.12, 0)
main.BackgroundColor3 = Color3.fromRGB(12,12,12)
main.BorderSizePixel = 0
main.Visible = false
Instance.new("UICorner", main).CornerRadius = UDim.new(0,12)
local stroke = Instance.new("UIStroke", main) stroke.Thickness = 3 stroke.Color = Color3.fromRGB(0,170,255)

-- Title + rainbow text
local title = Instance.new("TextLabel", main)
title.Size = UDim2.new(1, -20, 0, 36)
title.Position = UDim2.new(0, 10, 0, 6)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.Text = "DHL - UBB"
title.TextColor3 = Color3.fromRGB(255,255,255)
title.TextXAlignment = Enum.TextXAlignment.Left

-- rainbow loop for stroke + title
task.spawn(function()
    local t = 0
    while task.wait(0.05) do
        t = t + 1
        local r = math.floor((math.sin(t/20)*127+128))
        local g = math.floor((math.sin(t/20+2)*127+128))
        local b = math.floor((math.sin(t/20+4)*127+128))
        local c = Color3.fromRGB(r,g,b)
        stroke.Color = c
        title.TextColor3 = c
    end
end)

-- Tab bar
local tabBar = Instance.new("Frame", main)
tabBar.Size = UDim2.new(1, -20, 0, 36)
tabBar.Position = UDim2.new(0, 10, 0, 48)
tabBar.BackgroundTransparency = 1
local tLayout = Instance.new("UIListLayout", tabBar) tLayout.FillDirection = Enum.FillDirection.Horizontal tLayout.Padding = UDim.new(0,8) tLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left

local function newTab(name)
    local b = Instance.new("TextButton", tabBar)
    b.Size = UDim2.new(0, 110, 1, 0)
    b.Text = name
    b.Font = Enum.Font.Gotham
    b.TextSize = 14
    b.BackgroundColor3 = Color3.fromRGB(28,28,28)
    b.TextColor3 = Color3.fromRGB(255,255,255)
    Instance.new("UICorner", b).CornerRadius = UDim.new(0,8)
    return b
end

local tabMain = newTab("Main")
local tabESP = newTab("ESP")
local tabSet = newTab("Setting")

-- Content area
local content = Instance.new("Frame", main)
content.Size = UDim2.new(1, -20, 1, -110)
content.Position = UDim2.new(0, 10, 0, 92)
content.BackgroundTransparency = 1
local contentLayout = Instance.new("UIListLayout", content) contentLayout.Padding = UDim.new(0,8) contentLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Helper create button in content
local function createButton(text)
    local b = Instance.new("TextButton")
    b.Size = UDim2.new(1, 0, 0, 40)
    b.BackgroundColor3 = Color3.fromRGB(32,32,32)
    b.Font = Enum.Font.Gotham
    b.TextSize = 15
    b.TextColor3 = Color3.fromRGB(255,255,255)
    b.Text = text
    Instance.new("UICorner", b).CornerRadius = UDim.new(0,8)
    b.Parent = content
    return b
end

-- Console (separate window)
local console = Instance.new("Frame", ScreenGui)
console.Size = UDim2.new(0, 420, 0, 220)
console.Position = UDim2.new(0.55, 0, 0.12, 0)
console.BackgroundColor3 = Color3.fromRGB(10,10,10)
console.Visible = false
Instance.new("UICorner", console).CornerRadius = UDim.new(0,10)
local conTitle = Instance.new("TextLabel", console)
conTitle.Size = UDim2.new(1, -20, 0, 28)
conTitle.Position = UDim2.new(0, 10, 0, 6)
conTitle.BackgroundTransparency = 1
conTitle.Text = "Console Log"
conTitle.Font = Enum.Font.GothamBold
conTitle.TextSize = 14
conTitle.TextColor3 = Color3.fromRGB(255,255,255)
local conClear = Instance.new("TextButton", console)
conClear.Size = UDim2.new(0, 80, 0, 28)
conClear.Position = UDim2.new(1, -92, 0, 6)
conClear.Text = "Clear"
conClear.Font = Enum.Font.Gotham
conClear.TextSize = 13
conClear.BackgroundColor3 = Color3.fromRGB(40,40,40)
conClear.TextColor3 = Color3.fromRGB(255,255,255)
Instance.new("UICorner", conClear).CornerRadius = UDim.new(0,8)

local conScroll = Instance.new("ScrollingFrame", console)
conScroll.Size = UDim2.new(1, -16, 1, -56)
conScroll.Position = UDim2.new(0, 8, 0, 44)
conScroll.BackgroundTransparency = 1
conScroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
conScroll.ScrollBarThickness = 6
local conList = Instance.new("UIListLayout", conScroll) conList.Padding = UDim.new(0,6)

local function AddLog(text)
    local t = Instance.new("TextLabel", conScroll)
    t.Size = UDim2.new(1, -10, 0, 18)
    t.BackgroundTransparency = 1
    t.Font = Enum.Font.Code
    t.TextSize = 12
    t.TextColor3 = Color3.fromRGB(200,200,200)
    t.TextXAlignment = Enum.TextXAlignment.Left
    t.Text = text
    -- auto scroll to bottom
    task.delay(0.05, function() conScroll.CanvasPosition = Vector2.new(0, conScroll.AbsoluteCanvasSize.Y) end)
end

conClear.MouseButton1Click:Connect(function()
    for i=#conScroll:GetChildren(),1,-1 do
        local c = conScroll:GetChildren()[i]
        if c:IsA("TextLabel") then c:Destroy() end
    end
end)

-- ----------------------------
-- Main tab controls (All Char / Delete)
-- ----------------------------
local btnAllChar = createButton("ALL CHAR")
local btnDeleteNR = createButton("Delete Night/Rain")

btnAllChar.MouseButton1Click:Connect(function()
    task.spawn(function()
        local ok, err = pcall(function()
            local mainUI = LP.PlayerGui:FindFirstChild("MainUI")
            if not mainUI then AddLog("[AllChar] MainUI not found"); return end
            -- try path: StoreFrame -> Content -> Passes -> Content -> Left
            local left
            local store = mainUI:FindFirstChild("StoreFrame")
            if store then
                local contentFrm = store:FindFirstChild("Content")
                if contentFrm then
                    local passes = contentFrm:FindFirstChild("Passes")
                    if passes then
                        local passesContent = passes:FindFirstChild("Content")
                        if passesContent then
                            left = passesContent:FindFirstChild("Left")
                        end
                    end
                end
            end
            if not left then AddLog("[AllChar] Left not found in PlayerGui.MainUI"); end

            if AstroPurchase and CraftRemote then
                if left then
                    for _,v in ipairs(left:GetChildren()) do
                        if v:IsA("TextButton") or v:IsA("ImageButton") or v:IsA("Frame") then
                            local nm = v.Name
                            pcall(function() AstroPurchase:FireServer(nm, 0.001) end)
                            AddLog("[AllChar] AstroPurchase: "..tostring(nm))
                            pcall(function() CraftRemote:FireServer(nm, {Coins=1}) end)
                            AddLog("[AllChar] Craft: "..tostring(nm))
                            task.wait(0.08)
                        end
                    end
                end

                local morph = ReplicatedStorage:FindFirstChild("Morphshow") or ReplicatedStorage:FindFirstChild("MorphShow")
                if morph then
                    for _,m in ipairs(morph:GetChildren()) do
                        local nm = m.Name
                        pcall(function() AstroPurchase:FireServer(nm, 0.001) end)
                        AddLog("[AllChar] AstroPurchase: "..tostring(nm))
                        pcall(function() CraftRemote:FireServer(nm, {Coins=1}) end)
                        AddLog("[AllChar] Craft: "..tostring(nm))
                        task.wait(0.08)
                    end
                else
                    AddLog("[AllChar] Morphshow not found in ReplicatedStorage")
                end
            else
                AddLog("[AllChar] AstroPurchase/Craft remote missing")
            end
        end)
        if not ok then AddLog("[AllChar][ERROR] "..tostring(err)) end
    end)
end)

btnDeleteNR.MouseButton1Click:Connect(function()
    local ok, err = pcall(function()
        local assets = ReplicatedStorage:FindFirstChild("Assets")
        local gfx = assets and assets:FindFirstChild("GRAPHIC")
        if not gfx then AddLog("[Delete] GRAPHIC not found") return end
        if gfx:FindFirstChild("night") then gfx.night:Destroy(); AddLog("[Delete] night deleted") end
        if gfx:FindFirstChild("rain") then gfx.rain:Destroy(); AddLog("[Delete] rain deleted") end
    end)
    if not ok then AddLog("[Delete][ERROR] "..tostring(err)) end
end)

-- ----------------------------
-- ESP tab
-- ----------------------------
local btnESPtoggle = createButton("ESP ON/OFF (TÃªn|HP|Dist)")
local btnColorCycle = createButton("ESP Color: Cycle")

local colorCycle = {
    Color3.fromRGB(0,255,0),
    Color3.fromRGB(0,170,255),
    Color3.fromRGB(255,200,0),
    Color3.fromRGB(255,80,80),
    Color3.fromRGB(255,0,255)
}
local idxColor = 1
btnColorCycle.MouseButton1Click:Connect(function()
    idxColor = idxColor % #colorCycle + 1
    _G.ESP_Color = colorCycle[idxColor]
    AddLog(string.format("[ESP] Color set to (%d,%d,%d)", _G.ESP_Color.R*255, _G.ESP_Color.G*255, _G.ESP_Color.B*255))
end)

local espConns = {}
local function ensureESPForPlayer(plr)
    if plr == LP then return end
    local function build(ch)
        if not ch then return end
        local head = ch:FindFirstChild("Head")
        local hum = ch:FindFirstChildOfClass("Humanoid")
        local hrp = ch:FindFirstChild("HumanoidRootPart")
        if not head or not hum or not hrp then return end
        if head:FindFirstChild("DHL_ESP") then return end

        local gui = Instance.new("BillboardGui")
        gui.Name = "DHL_ESP"
        gui.Adornee = head
        gui.AlwaysOnTop = true
        gui.Size = UDim2.new(0,220,0,50)
        gui.Parent = head

        local lab = Instance.new("TextLabel", gui)
        lab.Size = UDim2.new(1,0,1,0)
        lab.BackgroundTransparency = 1
        lab.Font = Enum.Font.SourceSansBold
        lab.TextScaled = true
        lab.TextStrokeTransparency = 0.5
        lab.TextColor3 = _G.ESP_Color

        -- update loop
        espConns[plr] = espConns[plr] or {}
        table.insert(espConns[plr], RunService.RenderStepped:Connect(function()
            if not _G.ESP_Enabled or not plr.Character or not plr.Character.Parent then
                gui.Enabled = false
                return
            end
            if hum and hrp and LP.Character and LP.Character:FindFirstChild("HumanoidRootPart") then
                local dist = math.floor((LP.Character.HumanoidRootPart.Position - hrp.Position).Magnitude)
                lab.TextColor3 = _G.ESP_Color
                lab.Text = string.format("%s | %d/%d HP | %d studs", plr.Name, math.floor(hum.Health), math.floor(hum.MaxHealth), dist)
                gui.Enabled = true
            else
                gui.Enabled = false
            end
        end))
    end
    if plr.Character then build(plr.Character) end
    plr.CharacterAdded:Connect(function(ch) task.wait(0.06); build(ch) end)
end

btnESPtoggle.MouseButton1Click:Connect(function()
    _G.ESP_Enabled = not _G.ESP_Enabled
    AddLog("[ESP] "..(_G.ESP_Enabled and "ON" or "OFF"))
    if _G.ESP_Enabled then
        for _,p in ipairs(Players:GetPlayers()) do ensureESPForPlayer(p) end
    else
        -- disable visuals (BillboardGui stays but will be set disabled by loops)
    end
end)

Players.PlayerAdded:Connect(function(p) ensureESPForPlayer(p) end)
for _,p in ipairs(Players:GetPlayers()) do ensureESPForPlayer(p) end

-- ----------------------------
-- Hitbox (runtime)
-- ----------------------------
local hitboxTicker = RunService.RenderStepped:Connect(function()
    if _G.HitboxEnabled then
        for _,plr in ipairs(Players:GetPlayers()) do
            if plr ~= LP and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                pcall(function()
                    local hrp = plr.Character.HumanoidRootPart
                    hrp.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
                    hrp.Transparency = 0.7
                    hrp.BrickColor = BrickColor.new("Really blue")
                    hrp.Material = Enum.Material.Neon
                    hrp.CanCollide = false
                end)
            end
        end
    end
end)

-- ----------------------------
-- Setting tab: Hitbox controls + console toggle
-- ----------------------------
local hitboxBox = Instance.new("TextBox", content)
hitboxBox.Size = UDim2.new(1,0,0,40)
hitboxBox.Text = tostring(_G.HeadSize) -- default 100
hitboxBox.Font = Enum.Font.SourceSans
hitboxBox.TextSize = 16
hitboxBox.ClearTextOnFocus = false
hitboxBox.BackgroundColor3 = Color3.fromRGB(40,40,40)
Instance.new("UICorner", hitboxBox).CornerRadius = UDim.new(0,8)

local btnHitToggle = createButton("Báº­t/Táº¯t Hitbox")
local btnInc = createButton("+50 Hitbox")
local btnDec = createButton("-50 Hitbox")
local btnConsoleToggle = createButton("Toggle Console (Logs)")

btnHitToggle.MouseButton1Click:Connect(function()
    _G.HitboxEnabled = not _G.HitboxEnabled
    AddLog("[Hitbox] "..(_G.HitboxEnabled and "ON" or "OFF"))
end)
btnInc.MouseButton1Click:Connect(function()
    _G.HeadSize = math.clamp((_G.HeadSize or 100) + 50, 10, 2000)
    hitboxBox.Text = tostring(_G.HeadSize)
    AddLog("[Hitbox] Size = "..tostring(_G.HeadSize))
end)
btnDec.MouseButton1Click:Connect(function()
    _G.HeadSize = math.clamp((_G.HeadSize or 100) - 50, 10, 2000)
    hitboxBox.Text = tostring(_G.HeadSize)
    AddLog("[Hitbox] Size = "..tostring(_G.HeadSize))
end)

hitboxBox.FocusLost:Connect(function(enter)
    if enter then
        local n = tonumber(hitboxBox.Text)
        if n then _G.HeadSize = math.clamp(n,10,2000); AddLog("[Hitbox] Size set to ".._G.HeadSize)
        else hitboxBox.Text = tostring(_G.HeadSize); AddLog("[Hitbox] Invalid size") end
    end
end)

btnConsoleToggle.MouseButton1Click:Connect(function()
    console.Visible = not console.Visible
end)

-- Buttons connect to tabs
tabMain.MouseButton1Click:Connect(function()
    -- show main content (we'll show first group of controls)
    -- Because we used a single 'content' flow, nothing to hide here; tabs are logical for user
    AddLog("[TAB] Main")
end)

tabESP.MouseButton1Click:Connect(function()
    AddLog("[TAB] ESP")
end)

tabSet.MouseButton1Click:Connect(function()
    AddLog("[TAB] Setting")
end)

-- Wire main buttons to functionality
btnAllChar.Parent = content -- ensure parent (already created earlier)
btnDeleteNR.Parent = content
btnESPtoggle.Parent = content
btnColorCycle.Parent = content

-- ensure order
btnAllChar.LayoutOrder = 1
btnDeleteNR.LayoutOrder = 2
btnESPtoggle.LayoutOrder = 3
btnColorCycle.LayoutOrder = 4
hitboxBox.LayoutOrder = 10
btnHitToggle.LayoutOrder = 11
btnInc.LayoutOrder = 12
btnDec.LayoutOrder = 13
btnConsoleToggle.LayoutOrder = 14

-- Toggle UI visibility
toggleBtn.MouseButton1Click:Connect(function()
    main.Visible = not main.Visible
end)

-- Ensure content canvas autosize
content.CanvasSize = UDim2.new(0,0,0,content.UIListLayout.AbsoluteContentSize.Y + 20)
content.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    content.CanvasSize = UDim2.new(0,0,0,content.UIListLayout.AbsoluteContentSize.Y + 20)
end)

-- make console draggable (simple)
do
    local dragging, startPos, dragStart
    console.InputBegan:Connect(function(i)
        if i.UserInputType == Enum.UserInputType.MouseButton1 or i.UserInputType == Enum.UserInputType.Touch then
            dragging = true; dragStart = i.Position; startPos = console.Position
            i.Changed:Connect(function() if i.UserInputState == Enum.UserInputState.End then dragging=false end end)
        end
    end)
    UIS.InputChanged:Connect(function(i)
        if dragging and (i.UserInputType==Enum.UserInputType.MouseMovement or i.UserInputType==Enum.UserInputType.Touch) then
            local delta = i.Position - dragStart
            console.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

AddLog("DHL - UBB loaded (FULL). UI ready.")

-- end of script
